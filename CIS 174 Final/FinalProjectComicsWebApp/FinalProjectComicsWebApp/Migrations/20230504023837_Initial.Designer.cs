// <auto-generated />
using System;
using FinalProjectComicsWebApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalProjectComicsWebApp.Migrations
{
    [DbContext(typeof(ComicContext))]
    [Migration("20230504023837_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinalProjectComicsWebApp.Models.Comic", b =>
                {
                    b.Property<int>("ComicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComicId"));

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalReviews")
                        .HasColumnType("int");

                    b.HasKey("ComicId");

                    b.ToTable("Comics");

                    b.HasData(
                        new
                        {
                            ComicId = 1,
                            Rating = 4.0,
                            Title = "Amazing Spider-Man 300",
                            TotalReviews = 2
                        },
                        new
                        {
                            ComicId = 2,
                            Rating = 4.0,
                            Title = "Detective Comics 27",
                            TotalReviews = 2
                        });
                });

            modelBuilder.Entity("FinalProjectComicsWebApp.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<int>("ComicId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("ReviewContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReviewId");

                    b.HasIndex("ComicId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            ComicId = 1,
                            Rating = 4,
                            ReviewContent = "It's pretty good",
                            UserId = 1
                        },
                        new
                        {
                            ReviewId = 2,
                            ComicId = 1,
                            Rating = 4,
                            ReviewContent = "Good Comic!",
                            UserId = 2
                        },
                        new
                        {
                            ReviewId = 3,
                            ComicId = 2,
                            Rating = 4,
                            ReviewContent = "It's alright",
                            UserId = 1
                        },
                        new
                        {
                            ReviewId = 4,
                            ComicId = 2,
                            Rating = 4,
                            ReviewContent = "I really enjoyed this comic",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("FinalProjectComicsWebApp.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int?>("AuthLevel")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            AuthLevel = 2,
                            Password = "JohnOrd!",
                            UserName = "JOrd"
                        },
                        new
                        {
                            UserId = 2,
                            AuthLevel = 1,
                            Password = "password",
                            UserName = "RegularUser"
                        });
                });

            modelBuilder.Entity("FinalProjectComicsWebApp.Models.Review", b =>
                {
                    b.HasOne("FinalProjectComicsWebApp.Models.Comic", "Comic")
                        .WithMany()
                        .HasForeignKey("ComicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProjectComicsWebApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comic");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
