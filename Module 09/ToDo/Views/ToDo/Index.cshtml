@using ToDoApp.Models
@using ToDoApp.Data
@model IEnumerable<Ticket>
@{
    string Overdue(Ticket task) => task.Overdue ? "bg-warning" : "";
}
<div class="row">
    <div class="col-sm-2">
        <form asp-action="Filter" method="post">
            <div class="form-group">
                <label>Sprint:</label>
                <select name="filter" class="form-control"
                        asp-items="@(new SelectList(ViewBag.Sprints,
    "SprintId", "Name", ViewBag.Filters.SprintId))">
                    <option value="all">All</option>
                </select>
            </div>
            <div class="form-group">
                <label>Points:</label>
                <div>
                    <div class="form-group">
                        <label>Min</label>
                        <select name="filter" class="form-control-sm"
                                asp-items="@(new SelectList(ViewBag.Points, ViewBag.Filters.MinPoints))">
                            <option value="all">Any</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label>Max</label>
                        <select name="filter" class="form-control-sm"
                                asp-items="@(new SelectList(ViewBag.Points, ViewBag.Filters.MaxPoints))">
                            <option value="all">Any</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label>Due:</label>
                <select name="filter" class="form-control"
                        asp-items="@(new SelectList(ViewBag.DueFilters,
                        "Key", "Value", ViewBag.Filters.Due))">
                    <option value="all">All</option>
                </select>
            </div>
            <div class="form-group">
                <label>Status:</label>
                <select name="filter" class="form-control"
                        asp-items="@(new SelectList(ViewBag.Statuses,
                        "StatusId", "Name", ViewBag.Filters.StatusId))">
                    <option value="all">All</option>
                </select>
            </div>
            <button type="submit" class="btn btn-primary">Filter</button>
            <a asp-action="Index" asp-rout-id=""
               class="btn btn-primary">Clear</a>
        </form>
    </div>
    <div class="col-sm-10">
        <a asp-action="Add"><b>Add new task</b></a>

        <table class="table table-bordered table-striped mt-2">
            <thead>
                <tr>
                    <th class="col-sm-2">Name</th>
                    <th class="col-sm-4">Description</th>
                    <th class="col-sm-1">Point Value</th>
                    <th class="col-sm-2">Sprint (Due Date)</th>
                    <th class="col-sm-2">Status</th>
                    <th class="col-sm-1"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (Ticket task in Model)
                {
                    string overdue = Overdue(task);
                    <tr>
                        <td>@task.Name</td>
                        <td>@task.Description</td>
                        <td>@task.Points</td>
                        <td class="@overdue">
                            @task.Sprint.Name
                            (@(((DateTime)task.Sprint.DueDate).ToShortDateString()))
                        </td>
                        <td class="@overdue">
                            <!--(A)task.Status.Name-->
                            <form asp-action="Edit" method="post"
                              asp-route-id="@ViewBag.Filters.FilterString"
                              class="mr-2">
                                <input type="hidden" name="@nameof(Ticket.Id)" value="@task.Id" />

                                <select type="submit"
                                    name="@nameof(Ticket.StatusId)"
                                    asp-items="@(new SelectList(ViewBag.Statuses, "StatusId",
                                            "Name", task.StatusId))"
                                    class="form-control-sm">
                                    <!--<option disabled selected>---Choose Status---</option>-->

                                    <button type="submit" class="btn btn-primary btn-sm">Change Status</button>
                                </select>
                                <button type="submit" class="btn btn-primary btn-sm">Change Status</button>
                                

                            </form>
                            
                        </td>
                        
                        <td>


                            <button type="submit" class="btn btn-primary btn-sm">Delete</button>
                            

                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
